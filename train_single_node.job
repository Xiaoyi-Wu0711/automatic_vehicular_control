#!/bin/bash
#SBATCH --job-name=ring_train     # Job name
#SBATCH --ntasks-per-core 1  
#SBATCH --ntasks-per-node 32
#SBATCH --exclusive
#SBATCH --output=automatic_vehicular_control/logs/av_1/output_%j_%i.out  # Output file for logs (%j will be replaced by job ID)
#SBATCH --error=automatic_vehicular_control/logs/av_1/output_%j_%i.err   # Error file for logs
#SBATCH --time=12:00:00             # Total runtime limit (HH:MM:SS)
#SBATCH --partition=gpuq,rome,workq,fatq

export F=automatic_vehicular_control
export R=results

# Activate Conda environment
conda activate /home/xiawu/.conda/envs/default/envs/sumo_py310

seed=1

# Run the training script
# python $F/ring.py pareto/av_1/ circumference=200 av=1 n_veh=26 n_workers=32 n_rollouts_per_step=32 warmup_steps=2000 skip_stat_steps=5000 horizon=5000 global_reward=True

output_dir="$F/pareto/av_1/c_250/beta_0_tmp_2/seed_${seed}/"
# Create the output directory if it doesn't exist
mkdir -p "${output_dir}"

# Run the Python script with cleanly formatted arguments
python "$F/ring_single_veh_number.py" "${output_dir}" \
    "n_veh=2" \
    "av=1" \
    "beta=0" \
    "circumference=250" \
    "n_workers=45" \
    "n_rollouts_per_step=45" \
    "warmup_steps=2000" \
    "skip_stat_steps=5000" \
    "horizon=5000" \
    "global_reward=True" \
    "n_steps=100" \
    "alg='TRPO'" \
    "use_critic=True" \
    "gamma=0.9995" \
    "scale_ttc=1" \
    "scale_drac=1" \
    "seed_np=${seed}" \
    "seed_torch=${seed}" \
    "residual_transfer=False" \
    "mrtl=False" \
    "handcraft=False" \
    "step_save=False" \
    "lr=1e-4" \
    "wb=False" \
    "tb=True"


echo "Training job completed!"
